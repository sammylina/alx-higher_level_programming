Test cases for BaseGeometry class

    import the basegeometry class
    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
    
    area method should exist
    >>> bg = BaseGeometry()
    >>> bool(bg.area)
    True
    
    area method should raise exception
    >>> bg = BaseGeometry()
    >>> bg.area()
    Traceback (most recent call last):
    Exception: area() is not implemented

    integer_validator method should exist
    >>> bg = BaseGeometry()
    >>> bool(bg.integer_validator)
    True

    should have two positional arguments
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("age")
    Traceback (most recent call last):
    TypeError: integer_validator() missing 1 required positional argument: 'value'

    >>> bg = BaseGeometry()
    >>> bg.integer_validator()
    Traceback (most recent call last):
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

    second should be integer
    >>> bg = BaseGeometry()

        if not integer raise type error
        >>> bg.integer_validator("age", True)
        Traceback (most recent call last):
        TypeError: age must be an integer

        >>> bg.integer_validator("age", "str")
        Traceback (most recent call last):
        TypeError: age must be an integer

        >>> bg.integer_validator("age", [3, 2])
        Traceback (most recent call last):
        TypeError: age must be an integer

        >>> bg.integer_validator("age", {'dict': True})
        Traceback (most recent call last):
        TypeError: age must be an integer

        >>> bg.integer_validator("age", (3, ))
        Traceback (most recent call last):
        TypeError: age must be an integer

        if <= 0 raise value error
        >>> bg.integer_validator("age", 0)
        Traceback (most recent call last):
        ValueError: age must be greater than 0

        >>> bg.integer_validator("age", -4)
        Traceback (most recent call last):
        ValueError: age must be greater than 0

    >>> bg = BaseGeometry()
    >>> bg.integer_validator("age", 23)

    

